@model IEnumerable<SocialAlliance.Models.WebConfig.CredentialsConfig>
@using SocialAlliance.Models.WebConfig;
@using SocialAlliance.Models;

<table id="credentialsList">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Account")
            </th>
            <th>
                @Html.DisplayName("Key (Application Id)")
            </th>
            <th>
                @Html.DisplayName("Secret (Password)")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ ViewBag.Credentials = new List<string>() { "youTube" }; }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountType)
                    @{ ((List<string>) ViewBag.Credentials).Add(item.AccountType.ToString()); }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConsumerKey)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConsumerSecret)
                </td>
                <td>
                    @Ajax.ActionLink("Delete", "Delete", new { accountType = item.AccountType },
                        new AjaxOptions { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "credentialsList" }, new { @class = "btn btn-default" })
                </td>
            </tr>
        }

        @*--------------------------------------------------------- ADD-NEW ROW ---------------------------------------------------------*@

        @* Allow adding new credential sets if not all available have been assigned, keep in mind that YouTube credentials are not assignable *@
        @if (Model.Count() < Enum.GetValues(typeof(AccountType)).Length - 1)
        {
            @Html.Partial("_AddCredentialsPartial", new CredentialsConfig())
        }

    </tbody>
</table>

@model IEnumerable<SocialAlliance.Models.WebConfig.CredentialsConfig>
@using SocialAlliance.Models.WebConfig;
@using SocialAlliance.Models;

@{
    ViewBag.Title = "View1";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Credentials</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Account")
            </th>
            <th>
                @Html.DisplayName("Key (Application Id)")
            </th>
            <th>
                @Html.DisplayName("Secret (Password)")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ ViewBag.Credentials = new List<string>() {"youTube"}; }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountType)
                    @{ ((List<string>) ViewBag.Credentials).Add(item.AccountType.ToString()); }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConsumerKey)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ConsumerSecret)
                </td>
                <td>
                    @*@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ })*@
                    @using (Html.BeginForm("Delete", "Credentials", new { accountType = item.AccountType }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Delete" class="btn btn-default" />
                    }
                </td>
            </tr>
        }

        @* Allow adding new credential sets if not all available have been assigned, keep in mind that YouTube credentials are not assignable *@
        @if (Model.Count() < Enum.GetValues(typeof(AccountType)).Length - 1)
        {
            @Html.Partial("_AddCredentialsPartial", new CredentialsConfig())
        }

    </tbody>
</table>
